/******************************************************************************
* Copyright (C) 2023 Advanced Micro Devices, Inc. All Rights Reserved.
* SPDX-License-Identifier: MIT
******************************************************************************/
/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xparameters.h"
#include "xil_io.h"
#include "adc_lite.h"
#include "dac_lite.h"

void write_data_control_reg(int value) {
	DAC_LITE_mWriteReg (XPAR_ADC_LITE_0_DEVICE_ID,DAC_LITE_S00_AXI_SLV_REG0_OFFSET, value);
}
void write_data_out_reg(int value) {
	DAC_LITE_mWriteReg (XPAR_ADC_LITE_0_DEVICE_ID,DAC_LITE_S00_AXI_SLV_REG2_OFFSET, value);
}

int read_data_in_reg() {
	return ADC_LITE_mReadReg (XPAR_ADC_LITE_0_DEVICE_ID,0);
}

int main() {
	init_platform();
	xil_printf("AXI Lite Example Started\n");


    for (int i = 0; i < 10; i++) {
 //   	write_data_control_reg(i);
        write_data_out_reg(0x11811111);

        int data_in = read_data_in_reg();

        xil_printf("Iteration %d:, DataOut=%d,", i,  data_in);

        for (int delay = 0; delay < 1000000; delay++);
    }

    xil_printf("AXI Lite Example Completed\n");
    cleanup_platform();
    return 0;
}
